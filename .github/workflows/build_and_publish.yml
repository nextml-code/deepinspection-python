name: Build and publish

on:
  push:
    branches:
      - "**"
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          curl -sSL https://install.python-poetry.org | python - --version 1.7.1
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --no-root

      # - name: Run tests
      #   env:
      #     customer_id: ${{ secrets.CUSTOMER_ID }}
      #     client_Id: ${{ secrets.CLIENT_ID }}
      #     client_secret: ${{ secrets.CLIENT_SECRET }}
      #   run: poetry run pytest -s

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          curl -sSL https://install.python-poetry.org | python - --version 1.7.1
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --no-root

      - name: Build wheels
        run: |
          poetry version $(git tag --points-at HEAD)
          poetry build

      - name: Upload to PyPI
        env:
          USERNAME: __token__
          PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish --username=$USERNAME --password=$PASSWORD
